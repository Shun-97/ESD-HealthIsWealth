version: "3.8"

volumes:
  rabbitmq_data:
  pgdata: 
  kongadata:

services:
   ####################################
  # RabbitMQ: The messaging broker   
  ####################################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: esd-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - rabbitmq_data:/var/lib/rabbitmq

  ###################################
  # Account: The Account microservice
  ###################################
  accountManagement:
    build:
      context: ./Microservice/accountManagement
      dockerfile: Dockerfile
    image: honglixuan/accountmanagement:esd
    restart: always
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

  ###################################
  # planExerciseSchedule: The planExerciseSchedule microservice
  ###################################
  planExerciseSchedule:
    build:
      context: ./Microservice/planExerciseSchedule
      dockerfile: Dockerfile
    image: honglixuan/planexerciseschedule:esd
    restart: always
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

  ###################################
  # getFoodInfo: The getFoodInfo microservice
  ###################################
  getFoodInfo:
    build:
      context: ./Microservice/getFoodInfo
      dockerfile: Dockerfile
    image: honglixuan/getfoodinfo:esd
    restart: always
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

  ###################################
  # createMeal: The createMealmicroservice
  ###################################
  createMeal:
    build:
      context: ./Microservice/createMeal
      dockerfile: Dockerfile
    image: honglixuan/createmeal:esd
    restart: always
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1
      
      
  #######################################################
  # getExercise: The getExercise  microservice
  #######################################################
  getExercise:
    build:
      context: ./Microservice/getExercise
      dockerfile: Dockerfile
    image: honglixuan/getexercise:esd
    restart: always
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1
    ports:
      - "5320:5320"
 
  #######################################################
  # getRecipe: The getRecipe microservice
  #######################################################
  getRecipe:
    build:
      context: ./Microservice/getRecipe
      dockerfile: Dockerfile
    image: honglixuan/getrecipe:esd
    restart: always
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

  #######################################################
  # googleAuthentication: The googleAuthentication  microservice
  #######################################################
  googleAuthentication:
    build:
      context: ./Microservice/googleAuthentication
      dockerfile: Dockerfile
    image: honglixuan/googleauthentication:esd
    restart: always
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

  #######################################################
  # getImageDetails : The getImageDetails  microservice
  #######################################################
  getimagedetails:
    build:
      context: ./Microservice/getImageDetails
      dockerfile: Dockerfile
    image: honglixuan/getimagedetails:esd
    restart: always
    environment:
      PYTHONUNBUFFERED: 1

 #######################################################
  # Activity : The Activity microservice
  #######################################################
  activity:
    build:
      context: ./Microservice/logging
      dockerfile: activity.Dockerfile
    image: honglixuan/activity:esd
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

 #######################################################
  # Error : The Error microservice
  #######################################################
  error:
    build:
      context: ./Microservice/logging
      dockerfile: error.Dockerfile
    image: honglixuan/error:esd
    restart: always
    depends_on:
        - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

 #######################################################
  # getMealHistory : The getMealHistory microservice
  #######################################################
  getMealHistory:
    build:
      context: ./Microservice/getSearchHistory
      dockerfile: Dockerfile
    image: honglixuan/getsearchhistory:esd
    restart: always
    depends_on:
        - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1
    ports:
        - "6120:6120"
 #######################################################
  # getMeals : The getMeals microservice
  #######################################################
  getMeals:
    build:
      context: ./Microservice/getMeals
      dockerfile: Dockerfile
    image: honglixuan/getmeals:esd
    restart: always
    depends_on:
        - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1
    ports:
      - "6130:6130"

    #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:9.6
    restart: always
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:2.0.4
    command: "kong migrations bootstrap"
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:2.0.4
    restart: always
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration
    ports:
      - "8000:8000"
  
  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga
    restart: always
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: password
      DB_DATABASE: konga_db
    depends_on:
      - kong
    ports:
      - "1337:1337"
    volumes:
      - kongadata:/app/kongadata